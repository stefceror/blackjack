// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var deck, game;
      this.set('deck', deck = new Deck());
      this.set('game', game = new Game({
        'deck': deck
      }));
      this.set('dealerWins', 0);
      this.set('playerWins', 0);
      this.listenTo(this.get('game'), 'player', this.playerWin);
      return this.listenTo(this.get('game'), 'dealer', this.dealerWin);
    };

    App.prototype.playAgain = function() {
      var deck, game;
      if ((this.get('deck')).length < 8) {
        this.set('deck', deck = new Deck());
      }
      this.set('game', game = new Game({
        'deck': this.get('deck')
      }));
      this.listenTo(this.get('game'), 'player', this.playerWin);
      return this.listenTo(this.get('game'), 'dealer', this.dealerWin);
    };

    App.prototype.playerWin = function() {
      var wins;
      return this.set('playerWins', wins = (this.get('playerWins')) + 1);
    };

    App.prototype.dealerWin = function() {
      var wins;
      return this.set('dealerWins', wins = (this.get('dealerWins')) + 1);
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.map
